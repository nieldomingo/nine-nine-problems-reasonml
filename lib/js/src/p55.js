// Generated by BUCKLESCRIPT VERSION 2.0.0, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");

function child_counts(n) {
  if (n % 2) {
    return /* tuple */[
            (n / 2 | 0) + 1 | 0,
            n / 2 | 0
          ];
  } else {
    return /* tuple */[
            n / 2 | 0,
            n / 2 | 0
          ];
  }
}

function cbal_tree(n) {
  if (n) {
    var match = child_counts(n - 1 | 0);
    var cnt2 = match[1];
    var cnt1 = match[0];
    if (cnt1 === cnt2) {
      return sub_trees(cnt1, cnt1);
    } else {
      return List.append(sub_trees(cnt1, cnt2), sub_trees(cnt2, cnt1));
    }
  } else {
    return /* :: */[
            /* Empty */0,
            /* [] */0
          ];
  }
}

function sub_trees(cnt1, cnt2) {
  return List.concat(List.map((function (left) {
                    return List.map((function (right) {
                                  return /* Node */[
                                          "x",
                                          left,
                                          right
                                        ];
                                }), cbal_tree(cnt2));
                  }), cbal_tree(cnt1)));
}

console.log(cbal_tree(4));

console.log(List.length(cbal_tree(4)));

exports.child_counts = child_counts;
exports.cbal_tree    = cbal_tree;
exports.sub_trees    = sub_trees;
/*  Not a pure module */
