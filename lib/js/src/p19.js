// Generated by BUCKLESCRIPT VERSION 2.0.0, PLEASE EDIT WITH CARE
'use strict';

var List       = require("bs-platform/lib/js/list.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");

function rotate(l, n) {
  var take = function (_l, _n, _accum) {
    while(true) {
      var accum = _accum;
      var n = _n;
      var l = _l;
      if (l) {
        if (n !== 0) {
          _accum = /* :: */[
            l[0],
            accum
          ];
          _n = n - 1 | 0;
          _l = l[1];
          continue ;
          
        } else {
          return /* tuple */[
                  accum,
                  l
                ];
        }
      } else {
        return /* tuple */[
                accum,
                /* [] */0
              ];
      }
    };
  };
  var into = function (_l, _accum) {
    while(true) {
      var accum = _accum;
      var l = _l;
      if (l) {
        _accum = /* :: */[
          l[0],
          accum
        ];
        _l = l[1];
        continue ;
        
      } else {
        return accum;
      }
    };
  };
  var normalize = function (n) {
    var len = List.length(l);
    if (n < 0) {
      return len + Caml_int32.mod_(n, len) | 0;
    } else {
      return Caml_int32.mod_(n, len);
    }
  };
  var match = take(l, normalize(n), /* [] */0);
  return into(List.rev(match[1]), into(match[0], /* [] */0));
}

console.log(rotate(/* :: */[
          "a",
          /* :: */[
            "b",
            /* :: */[
              "c",
              /* :: */[
                "d",
                /* :: */[
                  "e",
                  /* :: */[
                    "f",
                    /* :: */[
                      "g",
                      /* :: */[
                        "h",
                        /* [] */0
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ], 3));

console.log(rotate(/* :: */[
          "a",
          /* :: */[
            "b",
            /* :: */[
              "c",
              /* :: */[
                "d",
                /* :: */[
                  "e",
                  /* :: */[
                    "f",
                    /* :: */[
                      "g",
                      /* :: */[
                        "h",
                        /* [] */0
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ], -2));

exports.rotate = rotate;
/*  Not a pure module */
