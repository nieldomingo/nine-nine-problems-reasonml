// Generated by BUCKLESCRIPT VERSION 2.0.0, PLEASE EDIT WITH CARE
'use strict';

var List     = require("bs-platform/lib/js/list.js");
var Curry    = require("bs-platform/lib/js/curry.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");

function my_sort(cmp, l) {
  var insert = function (e, sorted_list) {
    if (sorted_list) {
      var h = sorted_list[0];
      if (Curry._2(cmp, e, h) > 0) {
        return /* :: */[
                h,
                insert(e, sorted_list[1])
              ];
      } else {
        return /* :: */[
                e,
                sorted_list
              ];
      }
    } else {
      return /* :: */[
              e,
              /* [] */0
            ];
    }
  };
  var _l = l;
  var _accum = /* [] */0;
  while(true) {
    var accum = _accum;
    var l$1 = _l;
    if (l$1) {
      _accum = insert(l$1[0], accum);
      _l = l$1[1];
      continue ;
      
    } else {
      return accum;
    }
  };
}

function length_sort(param) {
  return my_sort((function (a, b) {
                return List.length(a) - List.length(b) | 0;
              }), param);
}

function calc_freq(l) {
  var _l = l;
  var _cnt = 0;
  var _accum = /* [] */0;
  while(true) {
    var accum = _accum;
    var cnt = _cnt;
    var l$1 = _l;
    if (l$1) {
      var match = l$1[1];
      var a = l$1[0];
      if (match) {
        var t = match[1];
        var n = match[0];
        if (Caml_obj.caml_equal(a, n)) {
          _cnt = cnt + 1 | 0;
          _l = /* :: */[
            n,
            t
          ];
          continue ;
          
        } else {
          _accum = /* :: */[
            /* tuple */[
              a,
              cnt
            ],
            accum
          ];
          _cnt = 0;
          _l = /* :: */[
            n,
            t
          ];
          continue ;
          
        }
      } else {
        return /* :: */[
                /* tuple */[
                  a,
                  cnt
                ],
                accum
              ];
      }
    } else {
      return accum;
    }
  };
}

function frequency_sort(l) {
  var lengths = my_sort((function (a, b) {
          return a - b | 0;
        }), List.map(List.length, l));
  var freqs = calc_freq(lengths);
  var cmp = function (a, b) {
    return List.assoc(List.length(a), freqs) - List.assoc(List.length(b), freqs) | 0;
  };
  return my_sort(cmp, l);
}

console.log(my_sort((function (a, b) {
            return a - b | 0;
          }), /* :: */[
          1,
          /* :: */[
            5,
            /* :: */[
              2,
              /* :: */[
                9,
                /* [] */0
              ]
            ]
          ]
        ]));

console.log(length_sort(/* :: */[
          /* :: */[
            "a",
            /* :: */[
              "b",
              /* :: */[
                "c",
                /* [] */0
              ]
            ]
          ],
          /* :: */[
            /* :: */[
              "d",
              /* :: */[
                "e",
                /* [] */0
              ]
            ],
            /* :: */[
              /* :: */[
                "f",
                /* :: */[
                  "g",
                  /* :: */[
                    "h",
                    /* [] */0
                  ]
                ]
              ],
              /* :: */[
                /* :: */[
                  "d",
                  /* :: */[
                    "e",
                    /* [] */0
                  ]
                ],
                /* :: */[
                  /* :: */[
                    "i",
                    /* :: */[
                      "j",
                      /* :: */[
                        "k",
                        /* :: */[
                          "l",
                          /* [] */0
                        ]
                      ]
                    ]
                  ],
                  /* :: */[
                    /* :: */[
                      "m",
                      /* :: */[
                        "n",
                        /* [] */0
                      ]
                    ],
                    /* :: */[
                      /* :: */[
                        "o",
                        /* [] */0
                      ],
                      /* [] */0
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]));

console.log(frequency_sort(/* :: */[
          /* :: */[
            "a",
            /* :: */[
              "b",
              /* :: */[
                "c",
                /* [] */0
              ]
            ]
          ],
          /* :: */[
            /* :: */[
              "d",
              /* :: */[
                "e",
                /* [] */0
              ]
            ],
            /* :: */[
              /* :: */[
                "f",
                /* :: */[
                  "g",
                  /* :: */[
                    "h",
                    /* [] */0
                  ]
                ]
              ],
              /* :: */[
                /* :: */[
                  "d",
                  /* :: */[
                    "e",
                    /* [] */0
                  ]
                ],
                /* :: */[
                  /* :: */[
                    "i",
                    /* :: */[
                      "j",
                      /* :: */[
                        "k",
                        /* :: */[
                          "l",
                          /* [] */0
                        ]
                      ]
                    ]
                  ],
                  /* :: */[
                    /* :: */[
                      "m",
                      /* :: */[
                        "n",
                        /* [] */0
                      ]
                    ],
                    /* :: */[
                      /* :: */[
                        "o",
                        /* [] */0
                      ],
                      /* [] */0
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]));

exports.my_sort        = my_sort;
exports.length_sort    = length_sort;
exports.calc_freq      = calc_freq;
exports.frequency_sort = frequency_sort;
/*  Not a pure module */
